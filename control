#!/bin/bash

WORKSPACE=$(cd $(dirname $0)/; pwd)
cd $WORKSPACE

mkdir -p var

module=vpp-agent
app=$module
agtapp=agentctl
conf_d=/opt/vpp-agent/etc
vppcfg_d=/opt/vpp-agent/vppcfg
#conf=cfg.json
pidfile=var/vpp-agent.pid
logfile=var/vpp-agent.log
#
vppcfg_bak_maxnum=100

function check_pid() {
    if [ -f $pidfile ];then
        pid=`cat $pidfile`
        if [ -n $pid ]; then
            running=`ps -p $pid|grep -v "PID TTY" |wc -l`
            return $running
        fi
    fi
    return 0
}

function loadvppconfigs() {
    if [ -s $vppcfg_d/config.yaml ]; then
        ./$agtapp config update $vppcfg_d/config.yaml
    fi

}

function removebakconfigs() {
    cfgcount=`ls -l $vppcfg_d | grep bak| wc -l`
    if [ $cfgcount -gt $vppcfg_bak_maxnum ]; then
	    rmcount=`expr $cfgcount - $vppcfg_bak_maxnum`
	    rm -f `ls -l $vppcfg_d/ |grep bak |head -n $rmcount | awk -v dir="$vppcfg_d/" '{print dir$9}'`
    fi
}

function start() {
    check_pid
    running=$?
    if [ $running -gt 0 ];then
        echo -n "$app now is running already, pid="
        cat $pidfile
        return 1
    fi

    nohup ./$app --config-dir $conf_d &> $logfile &
    sleep 1
    running=`ps -p $! | grep -v "PID TTY" | wc -l`
    if [ $running -gt 0 ];then
        echo $! > $pidfile
        echo "$app started..., pid=$!"
    else
        echo "$app failed to start."
        return 1
    fi

    sleep 2

    loadvppconfigs
    removebakconfigs
}

function stop() {
    pid=`cat $pidfile`
    kill $pid
    rm -f $pidfile
    echo "$app stopped..."
}

function restart() {
    stop
    sleep 1
    start
}

function status() {
    check_pid
    running=$?
    if [ $running -gt 0 ];then
        echo started
    else
        echo stopped
    fi
}

function tailf() {
    tail -f $logfile
}

function build() {
    make cmd
    if [ $? -ne 0 ]; then
        exit $?
    fi
    rm -rf ./out
    mkdir -p ./out/etc
    mkdir -p ./out/var
    mkdir -p ./out/scripts
    mkdir -p ./out/vppcfg
    scp cmd/agentctl/agentctl cmd/vpp-agent/vpp-agent control ./out
    scp cmfiles/*.conf ./out/etc
    scp cmfiles/*.sh ./out/scripts
}

function pack() {
    build
    version=`cmd/agentctl/agentctl -v |awk '{print $3}'`
    cd out
    tar zcf $app-$version.tar.gz ./* 
    cd - 
    mv ./out/*.gz ./
}

function help() {
    echo "$0 build|pack|start|stop|restart|status|tail|tidyvppconf"
}

if [ "$1" == "" ]; then
    help
elif [ "$1" == "stop" ];then
    stop
elif [ "$1" == "start" ];then
    start
elif [ "$1" == "restart" ];then
    restart
elif [ "$1" == "status" ];then
    status
elif [ "$1" == "tail" ];then
    tailf
elif [ "$1" == "build" ];then
    build
elif [ "$1" == "pack" ];then
    pack
elif [ "$1" == "tidyvppconf" ];then
    removebakconfigs
else
    help
fi
