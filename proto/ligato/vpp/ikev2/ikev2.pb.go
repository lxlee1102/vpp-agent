// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: ligato/vpp/ikev2/ikev2.proto

package vpp_ikev2

import (
	proto "github.com/golang/protobuf/proto"
	_ "go.ligato.io/vpp-agent/v3/proto/ligato"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AuthMethod int32

const (
	AuthMethod_NONE_AUTHM     AuthMethod = 0
	AuthMethod_RSA_SIG        AuthMethod = 1
	AuthMethod_SHARED_KEY_MIC AuthMethod = 2
)

// Enum value maps for AuthMethod.
var (
	AuthMethod_name = map[int32]string{
		0: "NONE_AUTHM",
		1: "RSA_SIG",
		2: "SHARED_KEY_MIC",
	}
	AuthMethod_value = map[string]int32{
		"NONE_AUTHM":     0,
		"RSA_SIG":        1,
		"SHARED_KEY_MIC": 2,
	}
)

func (x AuthMethod) Enum() *AuthMethod {
	p := new(AuthMethod)
	*p = x
	return p
}

func (x AuthMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_ligato_vpp_ikev2_ikev2_proto_enumTypes[0].Descriptor()
}

func (AuthMethod) Type() protoreflect.EnumType {
	return &file_ligato_vpp_ikev2_ikev2_proto_enumTypes[0]
}

func (x AuthMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthMethod.Descriptor instead.
func (AuthMethod) EnumDescriptor() ([]byte, []int) {
	return file_ligato_vpp_ikev2_ikev2_proto_rawDescGZIP(), []int{0}
}

type IDType int32

const (
	IDType_NONE_IDTYPE    IDType = 0
	IDType_ID_IPV4_ADDR   IDType = 1  // ip4-addr
	IDType_ID_FQDN        IDType = 2  // fqdn
	IDType_ID_RFC822_ADDR IDType = 3  // rfc822
	IDType_ID_IPV6_ADDR   IDType = 5  // ip6-addr
	IDType_ID_DER_ASN1_DN IDType = 9  // der-asn1-dn"
	IDType_ID_DER_ASN1_GN IDType = 10 // der-asn1-gn
	IDType_ID_KEY_ID      IDType = 11 // key-id
)

// Enum value maps for IDType.
var (
	IDType_name = map[int32]string{
		0:  "NONE_IDTYPE",
		1:  "ID_IPV4_ADDR",
		2:  "ID_FQDN",
		3:  "ID_RFC822_ADDR",
		5:  "ID_IPV6_ADDR",
		9:  "ID_DER_ASN1_DN",
		10: "ID_DER_ASN1_GN",
		11: "ID_KEY_ID",
	}
	IDType_value = map[string]int32{
		"NONE_IDTYPE":    0,
		"ID_IPV4_ADDR":   1,
		"ID_FQDN":        2,
		"ID_RFC822_ADDR": 3,
		"ID_IPV6_ADDR":   5,
		"ID_DER_ASN1_DN": 9,
		"ID_DER_ASN1_GN": 10,
		"ID_KEY_ID":      11,
	}
)

func (x IDType) Enum() *IDType {
	p := new(IDType)
	*p = x
	return p
}

func (x IDType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IDType) Descriptor() protoreflect.EnumDescriptor {
	return file_ligato_vpp_ikev2_ikev2_proto_enumTypes[1].Descriptor()
}

func (IDType) Type() protoreflect.EnumType {
	return &file_ligato_vpp_ikev2_ikev2_proto_enumTypes[1]
}

func (x IDType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IDType.Descriptor instead.
func (IDType) EnumDescriptor() ([]byte, []int) {
	return file_ligato_vpp_ikev2_ikev2_proto_rawDescGZIP(), []int{1}
}

type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Profile id
	Id              string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Auth            []*Profile_Auth            `protobuf:"bytes,2,rep,name=auth,proto3" json:"auth,omitempty"`
	LocalId         string                     `protobuf:"bytes,3,opt,name=local_id,json=localId,proto3" json:"local_id,omitempty"`
	LocalIdType     IDType                     `protobuf:"varint,4,opt,name=local_id_type,json=localIdType,proto3,enum=ligato.vpp.ikev2.IDType" json:"local_id_type,omitempty"`
	RemoteId        string                     `protobuf:"bytes,5,opt,name=remote_id,json=remoteId,proto3" json:"remote_id,omitempty"`
	RemoteIdType    IDType                     `protobuf:"varint,6,opt,name=remote_id_type,json=remoteIdType,proto3,enum=ligato.vpp.ikev2.IDType" json:"remote_id_type,omitempty"`
	UdpEncap        bool                       `protobuf:"varint,7,opt,name=udp_encap,json=udpEncap,proto3" json:"udp_encap,omitempty"`
	TrafficSelector []*Profile_TrafficSelector `protobuf:"bytes,10,rep,name=traffic_selector,json=trafficSelector,proto3" json:"traffic_selector,omitempty"`
}

func (x *Profile) Reset() {
	*x = Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ligato_vpp_ikev2_ikev2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_ligato_vpp_ikev2_ikev2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_ligato_vpp_ikev2_ikev2_proto_rawDescGZIP(), []int{0}
}

func (x *Profile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Profile) GetAuth() []*Profile_Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *Profile) GetLocalId() string {
	if x != nil {
		return x.LocalId
	}
	return ""
}

func (x *Profile) GetLocalIdType() IDType {
	if x != nil {
		return x.LocalIdType
	}
	return IDType_NONE_IDTYPE
}

func (x *Profile) GetRemoteId() string {
	if x != nil {
		return x.RemoteId
	}
	return ""
}

func (x *Profile) GetRemoteIdType() IDType {
	if x != nil {
		return x.RemoteIdType
	}
	return IDType_NONE_IDTYPE
}

func (x *Profile) GetUdpEncap() bool {
	if x != nil {
		return x.UdpEncap
	}
	return false
}

func (x *Profile) GetTrafficSelector() []*Profile_TrafficSelector {
	if x != nil {
		return x.TrafficSelector
	}
	return nil
}

type Profile_Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method AuthMethod `protobuf:"varint,1,opt,name=method,proto3,enum=ligato.vpp.ikev2.AuthMethod" json:"method,omitempty"`
	Data   string     `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Profile_Auth) Reset() {
	*x = Profile_Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ligato_vpp_ikev2_ikev2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile_Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile_Auth) ProtoMessage() {}

func (x *Profile_Auth) ProtoReflect() protoreflect.Message {
	mi := &file_ligato_vpp_ikev2_ikev2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile_Auth.ProtoReflect.Descriptor instead.
func (*Profile_Auth) Descriptor() ([]byte, []int) {
	return file_ligato_vpp_ikev2_ikev2_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Profile_Auth) GetMethod() AuthMethod {
	if x != nil {
		return x.Method
	}
	return AuthMethod_NONE_AUTHM
}

func (x *Profile_Auth) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type Profile_TrafficSelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalAddrStart  string `protobuf:"bytes,1,opt,name=local_addr_start,json=localAddrStart,proto3" json:"local_addr_start,omitempty"`
	LocalAddrStop   string `protobuf:"bytes,2,opt,name=local_addr_stop,json=localAddrStop,proto3" json:"local_addr_stop,omitempty"`
	RemoteAddrStart string `protobuf:"bytes,3,opt,name=remote_addr_start,json=remoteAddrStart,proto3" json:"remote_addr_start,omitempty"`
	RemoteAddrStop  string `protobuf:"bytes,4,opt,name=remote_addr_stop,json=remoteAddrStop,proto3" json:"remote_addr_stop,omitempty"`
	LocalPortStart  uint32 `protobuf:"varint,5,opt,name=local_port_start,json=localPortStart,proto3" json:"local_port_start,omitempty"`
	LocalPortStop   uint32 `protobuf:"varint,6,opt,name=local_port_stop,json=localPortStop,proto3" json:"local_port_stop,omitempty"`
	RemotePortStart uint32 `protobuf:"varint,7,opt,name=remote_port_start,json=remotePortStart,proto3" json:"remote_port_start,omitempty"`
	RemotePortStop  uint32 `protobuf:"varint,8,opt,name=remote_port_stop,json=remotePortStop,proto3" json:"remote_port_stop,omitempty"`
	Protocol        uint32 `protobuf:"varint,9,opt,name=protocol,proto3" json:"protocol,omitempty"`
}

func (x *Profile_TrafficSelector) Reset() {
	*x = Profile_TrafficSelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ligato_vpp_ikev2_ikev2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile_TrafficSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile_TrafficSelector) ProtoMessage() {}

func (x *Profile_TrafficSelector) ProtoReflect() protoreflect.Message {
	mi := &file_ligato_vpp_ikev2_ikev2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile_TrafficSelector.ProtoReflect.Descriptor instead.
func (*Profile_TrafficSelector) Descriptor() ([]byte, []int) {
	return file_ligato_vpp_ikev2_ikev2_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Profile_TrafficSelector) GetLocalAddrStart() string {
	if x != nil {
		return x.LocalAddrStart
	}
	return ""
}

func (x *Profile_TrafficSelector) GetLocalAddrStop() string {
	if x != nil {
		return x.LocalAddrStop
	}
	return ""
}

func (x *Profile_TrafficSelector) GetRemoteAddrStart() string {
	if x != nil {
		return x.RemoteAddrStart
	}
	return ""
}

func (x *Profile_TrafficSelector) GetRemoteAddrStop() string {
	if x != nil {
		return x.RemoteAddrStop
	}
	return ""
}

func (x *Profile_TrafficSelector) GetLocalPortStart() uint32 {
	if x != nil {
		return x.LocalPortStart
	}
	return 0
}

func (x *Profile_TrafficSelector) GetLocalPortStop() uint32 {
	if x != nil {
		return x.LocalPortStop
	}
	return 0
}

func (x *Profile_TrafficSelector) GetRemotePortStart() uint32 {
	if x != nil {
		return x.RemotePortStart
	}
	return 0
}

func (x *Profile_TrafficSelector) GetRemotePortStop() uint32 {
	if x != nil {
		return x.RemotePortStop
	}
	return 0
}

func (x *Profile_TrafficSelector) GetProtocol() uint32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

var File_ligato_vpp_ikev2_ikev2_proto protoreflect.FileDescriptor

var file_ligato_vpp_ikev2_ikev2_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2f, 0x76, 0x70, 0x70, 0x2f, 0x69, 0x6b, 0x65,
	0x76, 0x32, 0x2f, 0x69, 0x6b, 0x65, 0x76, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2e, 0x76, 0x70, 0x70, 0x2e, 0x69, 0x6b, 0x65, 0x76, 0x32,
	0x1a, 0x18, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x90, 0x07, 0x0a, 0x07, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2e, 0x76, 0x70,
	0x70, 0x2e, 0x69, 0x6b, 0x65, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6c,
	0x69, 0x67, 0x61, 0x74, 0x6f, 0x2e, 0x76, 0x70, 0x70, 0x2e, 0x69, 0x6b, 0x65, 0x76, 0x32, 0x2e,
	0x49, 0x44, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x3e, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x67, 0x61, 0x74,
	0x6f, 0x2e, 0x76, 0x70, 0x70, 0x2e, 0x69, 0x6b, 0x65, 0x76, 0x32, 0x2e, 0x49, 0x44, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x64, 0x70, 0x5f, 0x65, 0x6e, 0x63, 0x61, 0x70, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x64, 0x70, 0x45, 0x6e, 0x63, 0x61, 0x70, 0x12, 0x54, 0x0a,
	0x10, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f,
	0x2e, 0x76, 0x70, 0x70, 0x2e, 0x69, 0x6b, 0x65, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x1a, 0x50, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x34, 0x0a, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6c, 0x69,
	0x67, 0x61, 0x74, 0x6f, 0x2e, 0x76, 0x70, 0x70, 0x2e, 0x69, 0x6b, 0x65, 0x76, 0x32, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xc5, 0x03, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x10, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x05, 0x82, 0x7d, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x41, 0x64, 0x64, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2d, 0x0a, 0x0f, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x05, 0x82, 0x7d, 0x02, 0x08, 0x01, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x41, 0x64, 0x64, 0x72, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x31, 0x0a, 0x11, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x82, 0x7d, 0x02, 0x08, 0x01, 0x52, 0x0f, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2f, 0x0a, 0x10,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x73, 0x74, 0x6f, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x82, 0x7d, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x33, 0x0a,
	0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x09, 0x82, 0x7d, 0x06, 0x12, 0x04, 0x10, 0xff,
	0xff, 0x03, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x31, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x09, 0x82, 0x7d, 0x06,
	0x12, 0x04, 0x10, 0xff, 0xff, 0x03, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x6f, 0x72,
	0x74, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x35, 0x0a, 0x11, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x09, 0x82, 0x7d, 0x06, 0x12, 0x04, 0x10, 0xff, 0xff, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x33, 0x0a, 0x10,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x70,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x09, 0x82, 0x7d, 0x06, 0x12, 0x04, 0x10, 0xff, 0xff,
	0x03, 0x52, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x6f,
	0x70, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2a, 0x3d, 0x0a,
	0x0a, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0e, 0x0a, 0x0a, 0x4e,
	0x4f, 0x4e, 0x45, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4d, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52,
	0x53, 0x41, 0x5f, 0x53, 0x49, 0x47, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x48, 0x41, 0x52,
	0x45, 0x44, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x4d, 0x49, 0x43, 0x10, 0x02, 0x2a, 0x95, 0x01, 0x0a,
	0x06, 0x49, 0x44, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x4e, 0x45, 0x5f,
	0x49, 0x44, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x44, 0x5f, 0x49,
	0x50, 0x56, 0x34, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x44,
	0x5f, 0x46, 0x51, 0x44, 0x4e, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x44, 0x5f, 0x52, 0x46,
	0x43, 0x38, 0x32, 0x32, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x49,
	0x44, 0x5f, 0x49, 0x50, 0x56, 0x36, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x10, 0x05, 0x12, 0x12, 0x0a,
	0x0e, 0x49, 0x44, 0x5f, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x53, 0x4e, 0x31, 0x5f, 0x44, 0x4e, 0x10,
	0x09, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x44, 0x5f, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x53, 0x4e, 0x31,
	0x5f, 0x47, 0x4e, 0x10, 0x0a, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x44, 0x5f, 0x4b, 0x45, 0x59, 0x5f,
	0x49, 0x44, 0x10, 0x0b, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x6f, 0x2e, 0x6c, 0x69, 0x67, 0x61, 0x74,
	0x6f, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x70, 0x70, 0x2d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x76,
	0x33, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x2f, 0x76,
	0x70, 0x70, 0x2f, 0x69, 0x6b, 0x65, 0x76, 0x32, 0x3b, 0x76, 0x70, 0x70, 0x5f, 0x69, 0x6b, 0x65,
	0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ligato_vpp_ikev2_ikev2_proto_rawDescOnce sync.Once
	file_ligato_vpp_ikev2_ikev2_proto_rawDescData = file_ligato_vpp_ikev2_ikev2_proto_rawDesc
)

func file_ligato_vpp_ikev2_ikev2_proto_rawDescGZIP() []byte {
	file_ligato_vpp_ikev2_ikev2_proto_rawDescOnce.Do(func() {
		file_ligato_vpp_ikev2_ikev2_proto_rawDescData = protoimpl.X.CompressGZIP(file_ligato_vpp_ikev2_ikev2_proto_rawDescData)
	})
	return file_ligato_vpp_ikev2_ikev2_proto_rawDescData
}

var file_ligato_vpp_ikev2_ikev2_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ligato_vpp_ikev2_ikev2_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ligato_vpp_ikev2_ikev2_proto_goTypes = []interface{}{
	(AuthMethod)(0),                 // 0: ligato.vpp.ikev2.AuthMethod
	(IDType)(0),                     // 1: ligato.vpp.ikev2.IDType
	(*Profile)(nil),                 // 2: ligato.vpp.ikev2.Profile
	(*Profile_Auth)(nil),            // 3: ligato.vpp.ikev2.Profile.Auth
	(*Profile_TrafficSelector)(nil), // 4: ligato.vpp.ikev2.Profile.TrafficSelector
}
var file_ligato_vpp_ikev2_ikev2_proto_depIdxs = []int32{
	3, // 0: ligato.vpp.ikev2.Profile.auth:type_name -> ligato.vpp.ikev2.Profile.Auth
	1, // 1: ligato.vpp.ikev2.Profile.local_id_type:type_name -> ligato.vpp.ikev2.IDType
	1, // 2: ligato.vpp.ikev2.Profile.remote_id_type:type_name -> ligato.vpp.ikev2.IDType
	4, // 3: ligato.vpp.ikev2.Profile.traffic_selector:type_name -> ligato.vpp.ikev2.Profile.TrafficSelector
	0, // 4: ligato.vpp.ikev2.Profile.Auth.method:type_name -> ligato.vpp.ikev2.AuthMethod
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_ligato_vpp_ikev2_ikev2_proto_init() }
func file_ligato_vpp_ikev2_ikev2_proto_init() {
	if File_ligato_vpp_ikev2_ikev2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ligato_vpp_ikev2_ikev2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ligato_vpp_ikev2_ikev2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile_Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ligato_vpp_ikev2_ikev2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile_TrafficSelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ligato_vpp_ikev2_ikev2_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ligato_vpp_ikev2_ikev2_proto_goTypes,
		DependencyIndexes: file_ligato_vpp_ikev2_ikev2_proto_depIdxs,
		EnumInfos:         file_ligato_vpp_ikev2_ikev2_proto_enumTypes,
		MessageInfos:      file_ligato_vpp_ikev2_ikev2_proto_msgTypes,
	}.Build()
	File_ligato_vpp_ikev2_ikev2_proto = out.File
	file_ligato_vpp_ikev2_ikev2_proto_rawDesc = nil
	file_ligato_vpp_ikev2_ikev2_proto_goTypes = nil
	file_ligato_vpp_ikev2_ikev2_proto_depIdxs = nil
}
